apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'


android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    dokkaGfm {
        dokkaSourceSets {
            named("main") {
                noAndroidSdkLink.set(false)
                outputDirectory.set(buildDir.resolve("dokka"))
                reportUndocumented.set(true)
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}


def getDeviceAbi() {
    return "adb shell getprop ro.product.cpu.abi".execute().text.trim()
}

task buildJNI(type: Exec) {
    workingDir '../cpp'
    commandLine './build.rive.for.sh', '-a', getDeviceAbi()
}

ext {
    PUBLISH_GROUP_ID = 'app.rive'
    PUBLISH_VERSION = '0.0.2'
    PUBLISH_ARTIFACT_ID = 'rive-android'
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"